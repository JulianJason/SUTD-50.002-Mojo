/*
  Game manager is the judge for the game
  This module handles everything and is the so-called "smart" component
*/

module gameManager (
    input clk,  // clock
    input rst,  // reset
    // input buttons for easy medium hard, new game buttons
    input easyButton,
    input mediumButton,
    input hardButton,
    input singlePlayerButton,
    input multiplayerButton,
    output difficulty[2],
    output newGameFlag
  ) {
  .clk(clk) {
    .rst(rst) {
      fsm state = {NOT_PLAYING, SINGLE_PLAYER, MULTIPLAYER}; // the multiple playing states 
      fsm difficultyState = {EASY, MEDIUM, HARD};
    }
    dff confirm[1];
    button_conditioner spButtonCond;
    button_conditioner mpbuttonCond;
  }
  always {
    
    newGameFlag = 0;
    if (easyButton) {
        difficultyState.d = difficultyState.EASY;
    } else if (mediumButton) {
        difficultyState.d = difficultyState.MEDIUM;
    } else if (hardButton) {
        difficultyState.d = difficultyState.HARD;
    }
    spButtonCond.in = singlePlayerButton;
    mpbuttonCond.in = multiplayerButton;
    if (singlePlayerButton) {
      newGameFlag = 1;
      if (confirm.q == 1) {
          confirm.d = 0;
          state.d = state.NOT_PLAYING;
          newGameFlag = 1;
      } else {
       confirm.d = 1; 
      }
    } else if (multiplayerButton) {
      newGameFlag = 1;
      if (confirm.q == 1) {
          confirm.d = 0;
          state.d = state.NOT_PLAYING;
          newGameFlag = 1;
      } else {
       confirm.d = 1; 
      }
    }
    
    difficulty = difficultyState.q;
  }
}
