/*
  Game manager is the judge for the game
  This module handles everything and is the so-called "smart" component
*/

module gameManager (
    input clk,  // clock
    input rst,  // reset
    // input buttons for easy medium hard, new game buttons
    input newGameButton,
    input easyButton,
    input mediumButton,
    input hardButton,
    input blueWin,
    input redWin,
    output difficulty[3],
    output newGameFlag
  ) {
  .clk(clk) {
    .rst(rst) {
      fsm state = {NOT_PLAYING, EASY, MEDIUM, HARD}; // the multiple playing states 
    }
    dff blueScore[4];
    dff redScore[4];
  }
  always {
    newGameFlag = 0;
    case (state.q) {
      state.NOT_PLAYING:
      difficulty = 0;
      if (easyButton == 1 || mediumButton == 1 || hardButton == 1) {
        newGameFlag = 1;
      }
      if (newGameButton) {
        newGameFlag = 1;
        }
      state.EASY:
        difficulty = 1;
        if (newGameButton) {
         newGameFlag = 1;    
        }
        if (blueWin) {
          blueScore.d = blueScore.q + 1;
        } else if (redWin) {
          redScore.d = redScore.q + 1;
        }
      state.MEDIUM:
        difficulty = 2;
        if (newGameButton) {
         newGameFlag = 1;    
        }
        if (blueWin) {
          blueScore.d = blueScore.q + 2;
        } else if (redWin) {
          redScore.d = redScore.q + 2;
        }
      state.HARD:
        difficulty = 3;
        if (newGameButton) {
         newGameFlag = 1;    
        }
        if (blueWin) {
          blueScore.d = blueScore.q + 3;
        } else if (redWin) {
          redScore.d = redScore.q + 3;
        }
      default:
      difficulty = 0;
      newGameFlag = 0;
    }
  }
}