/*
  playerManager are dumb components
  Its job is to relay data between the components and the game gameManager (both input and output)
  
*/

module playerManager (
    input clk,  // clock
    input rst,  // reset
    input keypad_row[4],
    output keypad_col[4],
    output digit_out[8],
    output operator_out[6],
    input new_game,
    input choice1[4],
    input choice2[4],
    input choice3[4],
    input choice4[4],
    input currentValue[4],
    input destinationValue[8],
    output four_sev_seg[8],
    output four_sev_seg_sel[4],
    output two_sev_seg[8],
    output two_sev_seg_sel[2],
    output inputFlag
  ) {
  .clk(clk) { .rst(rst) {
      keypad playerKeypad;
      // multi_LED_digit player_input;
      multi_LED_digit choices_mled;
      multi_LED_digit value_mled(#DIGITS(2)); // set digits to 2
    }
  }
  binaryToBCD bin_to_dec;
  always {
    inputFlag = 0;
    playerKeypad.keypad_row = keypad_row;    
    keypad_col = playerKeypad.keypad_col;
    
    digit_out = playerKeypad.digit_out;
    operator_out = playerKeypad.operator_out;
    bin_to_dec.binary = currentValue;
    
    choices_mled.digit1 = playerKeypad.digit_out; //TODO change back
    choices_mled.digit2 = playerKeypad.digit_out;
    choices_mled.digit3 = playerKeypad.digit_out;
    choices_mled.digit4 = 4;
    
    bin_to_dec.binary = destinationValue;
    value_mled.digit1 = bin_to_dec.digit0;
    value_mled.digit2 = bin_to_dec.digit1;
    value_mled.digit3 = -1;
    value_mled.digit4 = -1;
    
    
    four_sev_seg = choices_mled.seg;
    four_sev_seg_sel = ~choices_mled.sel;
    
    two_sev_seg = value_mled.seg;
    two_sev_seg_sel = value_mled.sel;
  }
}
